<!doctype html>
<html lang="zh-CN">

<head>
    <meta charset="utf-8">
    <title>Cache - Laravel 5.1 中文文档 | Laravel 中文网</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="author" content="Laravel 中文网">
    <meta name="description" content="Laravel - 为 WEB 艺术家创造的 PHP 框架。| Laravel 中文网">
    <meta name="keywords" content="Laravel中文社区,php框架,laravel中文网,php framework,restful routing,laravel,laravel php">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--[if lte IE 9]>
		<script src="http://cdn.bootcss.com/html5shiv/3.7.2/html5shiv.min.js"></script>
	<![endif]-->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="../../assets/css/laravel.css">
    <link rel="stylesheet" href="../../assets/css/patch.css">
</head>

<body class="docs language-php">

    <span class="overlay"></span>

    <nav class="main">
        <div class="container">
            <a href="http://www.golaravel.com/laravel/" class="brand">
                <img src="../../assets/img/laravel-logo.png" height="30"> Laravel
            </a>

            <div class="responsive-sidebar-nav">
                <a href="cache#" class="toggle-slide menu-link btn">&#9776;</a>
            </div>

            <div class="switcher">
                <div class="dropdown">
                    <button class="btn dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true">
                        <!--<span class="faint">v</span> -->
                        5.1
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="index.html">5.1</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/5.0">5.0</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/4.2">4.2</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/4.1">4.1</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/4.0">4.0</a>
                        </li>
                    </ul>
                </div>
            </div>

            <ul class="main-nav">
                <li class="nav-docs"><a href="http://www.golaravel.com/laravel/docs/">中文文档</a>
                </li>
                <li class="nav-community"><a href="http://wenda.golaravel.com" target="_blank">问答社区</a>
                </li>
                <li class="nav-api"><a href="http://laravel.com/api/5.0/" target="_blank">API</a>
                </li>
                <li class="nav-laracasts"><a href="https://laracasts.com" target="_blank">视频教程（国外）</a>
                </li>
                <li class="nav-forge"><a href="https://forge.laravel.com" target="_blank">Forge</a>
                </li>

            </ul>
        </div>
    </nav>

    <nav id="slide-menu" class="slide-menu" role="navigation">

        <div class="brand">
            <a href="http://www.golaravel.com/laravel/">
                <img src="../../assets/img/laravel-logo-white.png" height="50">
            </a>
        </div>

        <ul class="slide-main-nav">
            <li><a href="http://www.golaravel.com/laravel/">首页</a>
            </li>
            <li class="nav-docs"><a href="http://www.golaravel.com/laravel/docs/">中文文档</a>
            </li>
            <li class="nav-community"><a href="http://wenda.golaravel.com" target="_blank">问答社区</a>
            </li>
            <li class="nav-api"><a href="http://laravel.com/api/5.0/" target="_blank">API</a>
            </li>
            <li class="nav-laracasts"><a href="https://laracasts.com" target="_blank">视频教程（国外）</a>
            </li>
            <li class="nav-forge"><a href="https://forge.laravel.com" target="_blank">Forge</a>
            </li>

        </ul>

        <div class="slide-docs-nav">
            <h2>文档目录</h2>
            <ul>
                <li>序言
                    <ul>
                        <li><a href="releases">版本说明</a>
                        </li>
                        <li><a href="upgrade">升级指南</a>
                        </li>
                        <li><a href="contributions">贡献指南</a>
                        </li>
                        <li><a href="http://www.golaravel.com/laravel/api/5.1">API 文档</a>
                        </li>
                    </ul>
                </li>
                <li>安装设置
                    <ul>
                        <li><a href="installation">安装</a>
                        </li>
                        <li><a href="homestead">Homestead</a>
                        </li>
                    </ul>
                </li>
                <li>教程
                    <ul>
                        <li><a href="quickstart">入门学习任务</a>
                        </li>
                        <li><a href="quickstart-intermediate">中级学习任务</a>
                        </li>
                    </ul>
                </li>
                <li>基础知识
                    <ul>
                        <li><a href="routing">路由</a>
                        </li>
                        <li><a href="middleware">中间件</a>
                        </li>
                        <li><a href="controllers">控制器</a>
                        </li>
                        <li><a href="requests">请求</a>
                        </li>
                        <li><a href="responses">响应</a>
                        </li>
                        <li><a href="views">视图</a>
                        </li>
                        <li><a href="blade">Blade 模板</a>
                        </li>
                    </ul>
                </li>
                <li>系统架构
                    <ul>
                        <li><a href="lifecycle">请求的生命周期</a>
                        </li>
                        <li><a href="structure">应用程序结构</a>
                        </li>
                        <li><a href="providers">服务提供者</a>
                        </li>
                        <li><a href="container">服务容器</a>
                        </li>
                        <li><a href="contracts">Contract</a>
                        </li>
                        <li><a href="facades">Facade</a>
                        </li>
                    </ul>
                </li>
                <li>系统服务
                    <ul>
                        <li><a href="authentication">认证</a>
                        </li>
                        <li><a href="authorization">授权</a>
                        </li>
                        <li><a href="artisan">Artisan 控制台</a>
                        </li>
                        <li><a href="billing">计费</a>
                        </li>
                        <li><a href="cache">缓存</a>
                        </li>
                        <li><a href="collections">集合</a>
                        </li>
                        <li><a href="elixir">Elixir</a>
                        </li>
                        <li><a href="encryption">加密</a>
                        </li>
                        <li><a href="errors">错误与日志</a>
                        </li>
                        <li><a href="events">事件</a>
                        </li>
                        <li><a href="filesystem">文件系统 / 云存储</a>
                        </li>
                        <li><a href="hashing">哈希</a>
                        </li>
                        <li><a href="helpers">辅助方法</a>
                        </li>
                        <li><a href="localization">本地化</a>
                        </li>
                        <li><a href="mail">邮件</a>
                        </li>
                        <li><a href="packages">扩展包开发</a>
                        </li>
                        <li><a href="pagination">分页</a>
                        </li>
                        <li><a href="queues">队列</a>
                        </li>
                        <li><a href="redis">Redis</a>
                        </li>
                        <li><a href="session">会话</a>
                        </li>
                        <li><a href="envoy">SSH 任务</a>
                        </li>
                        <li><a href="scheduling">任务调度</a>
                        </li>
                        <li><a href="testing">测试</a>
                        </li>
                        <li><a href="validation">验证</a>
                        </li>
                    </ul>
                </li>
                <li>数据库
                    <ul>
                        <li><a href="database">入门</a>
                        </li>
                        <li><a href="queries">查询构造器</a>
                        </li>
                        <li><a href="migrations">迁移</a>
                        </li>
                        <li><a href="seeding">数据填充</a>
                        </li>
                    </ul>
                </li>
                <li>Eloquent ORM
                    <ul>
                        <li><a href="eloquent">入门</a>
                        </li>
                        <li><a href="eloquent-relationships">关系</a>
                        </li>
                        <li><a href="eloquent-collections">集合</a>
                        </li>
                        <li><a href="eloquent-mutators">调整修改</a>
                        </li>
                        <li><a href="eloquent-serialization">序列化</a>
                        </li>
                    </ul>
                </li>
            </ul>

        </div>

    </nav>

    <div class="docs-wrapper container">

        <section class="sidebar">
            <ul>
                <li>序言
                    <ul>
                        <li><a href="releases">版本说明</a>
                        </li>
                        <li><a href="upgrade">升级指南</a>
                        </li>
                        <li><a href="contributions">贡献指南</a>
                        </li>
                        <li><a href="http://www.golaravel.com/laravel/api/5.1">API 文档</a>
                        </li>
                    </ul>
                </li>
                <li>安装设置
                    <ul>
                        <li><a href="installation">安装</a>
                        </li>
                        <li><a href="homestead">Homestead</a>
                        </li>
                    </ul>
                </li>
                <li>教程
                    <ul>
                        <li><a href="quickstart">入门学习任务</a>
                        </li>
                        <li><a href="quickstart-intermediate">中级学习任务</a>
                        </li>
                    </ul>
                </li>
                <li>基础知识
                    <ul>
                        <li><a href="routing">路由</a>
                        </li>
                        <li><a href="middleware">中间件</a>
                        </li>
                        <li><a href="controllers">控制器</a>
                        </li>
                        <li><a href="requests">请求</a>
                        </li>
                        <li><a href="responses">响应</a>
                        </li>
                        <li><a href="views">视图</a>
                        </li>
                        <li><a href="blade">Blade 模板</a>
                        </li>
                    </ul>
                </li>
                <li>系统架构
                    <ul>
                        <li><a href="lifecycle">请求的生命周期</a>
                        </li>
                        <li><a href="structure">应用程序结构</a>
                        </li>
                        <li><a href="providers">服务提供者</a>
                        </li>
                        <li><a href="container">服务容器</a>
                        </li>
                        <li><a href="contracts">Contract</a>
                        </li>
                        <li><a href="facades">Facade</a>
                        </li>
                    </ul>
                </li>
                <li>系统服务
                    <ul>
                        <li><a href="authentication">认证</a>
                        </li>
                        <li><a href="authorization">授权</a>
                        </li>
                        <li><a href="artisan">Artisan 控制台</a>
                        </li>
                        <li><a href="billing">计费</a>
                        </li>
                        <li><a href="cache">缓存</a>
                        </li>
                        <li><a href="collections">集合</a>
                        </li>
                        <li><a href="elixir">Elixir</a>
                        </li>
                        <li><a href="encryption">加密</a>
                        </li>
                        <li><a href="errors">错误与日志</a>
                        </li>
                        <li><a href="events">事件</a>
                        </li>
                        <li><a href="filesystem">文件系统 / 云存储</a>
                        </li>
                        <li><a href="hashing">哈希</a>
                        </li>
                        <li><a href="helpers">辅助方法</a>
                        </li>
                        <li><a href="localization">本地化</a>
                        </li>
                        <li><a href="mail">邮件</a>
                        </li>
                        <li><a href="packages">扩展包开发</a>
                        </li>
                        <li><a href="pagination">分页</a>
                        </li>
                        <li><a href="queues">队列</a>
                        </li>
                        <li><a href="redis">Redis</a>
                        </li>
                        <li><a href="session">会话</a>
                        </li>
                        <li><a href="envoy">SSH 任务</a>
                        </li>
                        <li><a href="scheduling">任务调度</a>
                        </li>
                        <li><a href="testing">测试</a>
                        </li>
                        <li><a href="validation">验证</a>
                        </li>
                    </ul>
                </li>
                <li>数据库
                    <ul>
                        <li><a href="database">入门</a>
                        </li>
                        <li><a href="queries">查询构造器</a>
                        </li>
                        <li><a href="migrations">迁移</a>
                        </li>
                        <li><a href="seeding">数据填充</a>
                        </li>
                    </ul>
                </li>
                <li>Eloquent ORM
                    <ul>
                        <li><a href="eloquent">入门</a>
                        </li>
                        <li><a href="eloquent-relationships">关系</a>
                        </li>
                        <li><a href="eloquent-collections">集合</a>
                        </li>
                        <li><a href="eloquent-mutators">调整修改</a>
                        </li>
                        <li><a href="eloquent-serialization">序列化</a>
                        </li>
                    </ul>
                </li>
            </ul>

        </section>

        <article>
            <h1>Cache</h1>
            <ul>
                <li><a href="cache#configuration">Configuration</a>
                </li>
                <li><a href="cache#cache-usage">Cache Usage</a>
                    <ul>
                        <li><a href="cache#obtaining-a-cache-instance">Obtaining A Cache Instance</a>
                        </li>
                        <li><a href="cache#retrieving-items-from-the-cache">Retrieving Items From The Cache</a>
                        </li>
                        <li><a href="cache#storing-items-in-the-cache">Storing Items In The Cache</a>
                        </li>
                        <li><a href="cache#removing-items-from-the-cache">Removing Items From The Cache</a>
                        </li>
                    </ul>
                </li>
                <li><a href="cache#adding-custom-cache-drivers">Adding Custom Cache Drivers</a>
                </li>
                <li><a href="cache#cache-tags">Cache Tags</a>
                    <ul>
                        <li><a href="cache#storing-tagged-cache-items">Storing Tagged Cache Items</a>
                        </li>
                        <li><a href="cache#accessing-tagged-cache-items">Accessing Tagged Cache Items</a>
                        </li>
                    </ul>
                </li>
                <li><a href="cache#cache-events">Cache Events</a>
                </li>
            </ul>
            <p>
                <a name="configuration"></a>
            </p>
            <h2>Configuration</h2>
            <p>Laravel provides a unified API for various caching systems. The cache configuration is located at <code>config/cache.php</code>. In this file you may specify which cache driver you would like used by default throughout your application. Laravel
                supports popular caching backends like <a href="http://memcached.org" target="_blank">Memcached</a> and <a href="http://redis.io" target="_blank">Redis</a> out of the box.</p>
            <p>The cache configuration file also contains various other options, which are documented within the file, so make sure to read over these options. By default, Laravel is configured to use the <code>file</code> cache driver, which stores the
                serialized, cached objects in the filesystem. For larger applications, it is recommended that you use an in-memory cache such as Memcached or APC. You may even configure multiple cache configurations for the same driver.</p>
            <h3>Cache Prerequisites</h3>
            <h4>Database</h4>
            <p>When using the <code>database</code> cache driver, you will need to setup a table to contain the cache items. You'll find an example <code>Schema</code> declaration for the table below:</p>
            <pre><code>Schema::create('cache', function($table) {
    $table-&gt;string('key')-&gt;unique();
    $table-&gt;text('value');
    $table-&gt;integer('expiration');
});
</code></pre>
            <h4>Memcached</h4>
            <p>Using the Memcached cache requires the <a href="http://pecl.php.net/package/memcached" target="_blank">Memcached PECL package</a> to be installed.</p>
            <p>The default <a href="cache#configuration">configuration</a> uses TCP/IP based on <a href="http://php.net/manual/en/memcached.addserver.php" target="_blank">Memcached::addServer</a>:</p>
            <pre><code>'memcached' =&gt; [
    [
        'host' =&gt; '127.0.0.1',
        'port' =&gt; 11211,
        'weight' =&gt; 100
    ],
],
</code></pre>
            <p>You may also set the <code>host</code> option to a UNIX socket path. If you do this, the <code>port</code> option should be set to <code>0</code>:</p>
            <pre><code>'memcached' =&gt; [
    [
        'host' =&gt; '/var/run/memcached/memcached.sock',
        'port' =&gt; 0,
        'weight' =&gt; 100
    ],
],
</code></pre>
            <h4>Redis</h4>
            <p>Before using a Redis cache with Laravel, you will need to install the <code>predis/predis</code> package (~1.0) via Composer.</p>
            <p>For more information on configuring Redis, consult its <a href="redis#configuration">Laravel documentation page</a>.</p>
            <p>
                <a name="cache-usage"></a>
            </p>
            <h2>Cache Usage</h2>
            <p>
                <a name="obtaining-a-cache-instance"></a>
            </p>
            <h3>Obtaining A Cache Instance</h3>
            <p>The <code>Illuminate\Contracts\Cache\Factory</code> and <code>Illuminate\Contracts\Cache\Repository</code> <a href="contracts">contracts</a> provide access to Laravel's cache services. The <code>Factory</code> contract provides access
                to all cache drivers defined for your application. The <code>Repository</code> contract is typically an implementation of the default cache driver for your application as specified by your <code>cache</code> configuration file.</p>
            <p>However, you may also use the <code>Cache</code> facade, which is what we will use throughout this documentation. The <code>Cache</code> facade provides convenient, terse access to the underlying implementations of the Laravel cache contracts.</p>
            <p>For example, let's import the <code>Cache</code> facade into a controller:</p>
            <pre><code>&lt;?php

namespace App\Http\Controllers;

use Cache;
use Illuminate\Routing\Controller;

class UserController extends Controller
{
    /**
     * Show a list of all users of the application.
     *
     * @return Response
     */
    public function index()
    {
        $value = Cache::get('key');

        //
    }
}
</code></pre>
            <h4>Accessing Multiple Cache Stores</h4>
            <p>Using the <code>Cache</code> facade, you may access various cache stores via the <code>store</code> method. The key passed to the <code>store</code> method should correspond to one of the stores listed in the <code>stores</code> configuration
                array in your <code>cache</code> configuration file:</p>
            <pre><code>$value = Cache::store('file')-&gt;get('foo');

Cache::store('redis')-&gt;put('bar', 'baz', 10);
</code></pre>
            <p>
                <a name="retrieving-items-from-the-cache"></a>
            </p>
            <h3>Retrieving Items From The Cache</h3>
            <p>The <code>get</code> method on the <code>Cache</code> facade is used to retrieve items from the cache. If the item does not exist in the cache, <code>null</code> will be returned. If you wish, you may pass a second argument to the <code>get</code>                method specifying the custom default value you wish to be returned if the item doesn't exist:</p>
            <pre><code>$value = Cache::get('key');

$value = Cache::get('key', 'default');
</code></pre>
            <p>You may even pass a <code>Closure</code> as the default value. The result of the <code>Closure</code> will be returned if the specified item does not exist in the cache. Passing a Closure allows you to defer the retrieval of default values
                from a database or other external service:</p>
            <pre><code>$value = Cache::get('key', function() {
    return DB::table(...)-&gt;get();
});
</code></pre>
            <h4>Checking For Item Existence</h4>
            <p>The <code>has</code> method may be used to determine if an item exists in the cache:</p>
            <pre><code>if (Cache::has('key')) {
    //
}
</code></pre>
            <h4>Incrementing / Decrementing Values</h4>
            <p>The <code>increment</code> and <code>decrement</code> methods may be used to adjust the value of integer items in the cache. Both of these methods optionally accept a second argument indicating the amount by which to increment or decrement
                the item's value:</p>
            <pre><code>Cache::increment('key');

Cache::increment('key', $amount);

Cache::decrement('key');

Cache::decrement('key', $amount);
</code></pre>
            <h4>Retrieve Or Update</h4>
            <p>Sometimes you may wish to retrieve an item from the cache, but also store a default value if the requested item doesn't exist. For example, you may wish to retrieve all users from the cache or, if they don't exist, retrieve them from the database
                and add them to the cache. You may do this using the <code>Cache::remember</code> method:</p>
            <pre><code>$value = Cache::remember('users', $minutes, function() {
    return DB::table('users')-&gt;get();
});
</code></pre>
            <p>If the item does not exist in the cache, the <code>Closure</code> passed to the <code>remember</code> method will be executed and its result will be placed in the cache.</p>
            <p>You may also combine the <code>remember</code> and <code>forever</code> methods:</p>
            <pre><code>$value = Cache::rememberForever('users', function() {
    return DB::table('users')-&gt;get();
});
</code></pre>
            <h4>Retrieve And Delete</h4>
            <p>If you need to retrieve an item from the cache and then delete it, you may use the <code>pull</code> method. Like the <code>get</code> method, <code>null</code> will be returned if the item does not exist in the cache:</p>
            <pre><code>$value = Cache::pull('key');
</code></pre>
            <p>
                <a name="storing-items-in-the-cache"></a>
            </p>
            <h3>Storing Items In The Cache</h3>
            <p>You may use the <code>put</code> method on the <code>Cache</code> facade to store items in the cache. When you place an item in the cache, you will need to specify the number of minutes for which the value should be cached:</p>
            <pre><code>Cache::put('key', 'value', $minutes);
</code></pre>
            <p>Instead of passing the number of minutes until the item expires, you may also pass a PHP <code>DateTime</code> instance representing the expiration time of the cached item:</p>
            <pre><code>$expiresAt = Carbon::now()-&gt;addMinutes(10);

Cache::put('key', 'value', $expiresAt);
</code></pre>
            <p>The <code>add</code> method will only add the item to the cache if it does not already exist in the cache store. The method will return <code>true</code> if the item is actually added to the cache. Otherwise, the method will return <code>false</code>:</p>
            <pre><code>Cache::add('key', 'value', $minutes);
</code></pre>
            <p>The <code>forever</code> method may be used to store an item in the cache permanently. These values must be manually removed from the cache using the <code>forget</code> method:</p>
            <pre><code>Cache::forever('key', 'value');
</code></pre>
            <p>
                <a name="removing-items-from-the-cache"></a>
            </p>
            <h3>Removing Items From The Cache</h3>
            <p>You may remove items from the cache using the <code>forget</code> method on the <code>Cache</code> facade:</p>
            <pre><code>Cache::forget('key');
</code></pre>
            <p>You may clear the entire cache using the <code>flush</code> method:</p>
            <pre><code>Cache::flush();
</code></pre>
            <p>Flushing the cache <strong>does not</strong> respect the cache prefix and will remove all entries from the cache. Consider this carefully when clearing a cache which is shared by other applications.</p>
            <p>
                <a name="adding-custom-cache-drivers"></a>
            </p>
            <h2>Adding Custom Cache Drivers</h2>
            <p>To extend the Laravel cache with a custom driver, we will use the <code>extend</code> method on the <code>Cache</code> facade, which is used to bind a custom driver resolver to the manager. Typically, this is done within a <a href="providers">service provider</a>.</p>
            <p>For example, to register a new cache driver named &quot;mongo&quot;:</p>
            <pre><code>&lt;?php

namespace App\Providers;

use Cache;
use App\Extensions\MongoStore;
use Illuminate\Support\ServiceProvider;

class CacheServiceProvider extends ServiceProvider
{
    /**
     * Perform post-registration booting of services.
     *
     * @return void
     */
    public function boot()
    {
        Cache::extend('mongo', function($app) {
            return Cache::repository(new MongoStore);
        });
    }

    /**
     * Register bindings in the container.
     *
     * @return void
     */
    public function register()
    {
        //
    }
}
</code></pre>
            <p>The first argument passed to the <code>extend</code> method is the name of the driver. This will correspond to your <code>driver</code> option in the <code>config/cache.php</code> configuration file. The second argument is a Closure that should
                return an <code>Illuminate\Cache\Repository</code> instance. The Closure will be passed an <code>$app</code> instance, which is an instance of the <a href="container">service container</a>.</p>
            <p>The call to <code>Cache::extend</code> could be done in the <code>boot</code> method of the default <code>App\Providers\AppServiceProvider</code> that ships with fresh Laravel applications, or you may create your own service provider to house
                the extension - just don't forget to register the provider in the <code>config/app.php</code> provider array.</p>
            <p>To create our custom cache driver, we first need to implement the <code>Illuminate\Contracts\Cache\Store</code> <a href="contracts">contract</a> contract. So, our MongoDB cache implementation would look something like this:</p>
            <pre><code>&lt;?php

namespace App\Extensions;

class MongoStore implements \Illuminate\Contracts\Cache\Store
{
    public function get($key) {}
    public function put($key, $value, $minutes) {}
    public function increment($key, $value = 1) {}
    public function decrement($key, $value = 1) {}
    public function forever($key, $value) {}
    public function forget($key) {}
    public function flush() {}
    public function getPrefix() {}
}
</code></pre>
            <p>We just need to implement each of these methods using a MongoDB connection. Once our implementation is complete, we can finish our custom driver registration:</p>
            <pre><code>Cache::extend('mongo', function($app) {
    return Cache::repository(new MongoStore);
});
</code></pre>
            <p>Once your extension is complete, simply update your <code>config/cache.php</code> configuration file's <code>driver</code> option to the name of your extension.</p>
            <p>If you're wondering where to put your custom cache driver code, consider making it available on Packagist! Or, you could create an <code>Extensions</code> namespace within your <code>app</code> directory. However, keep in mind that Laravel
                does not have a rigid application structure and you are free to organize your application according to your preferences.</p>
            <p>
                <a name="cache-tags"></a>
            </p>
            <h2>Cache Tags</h2>
            <blockquote>
                <p><strong>Note:</strong> Cache tags are not supported when using the <code>file</code> or <code>database</code> cache drivers. Furthermore, when using multiple tags with caches that are stored &quot;forever&quot;, performance will be best
                    with a driver such as <code>memcached</code>, which automatically purges stale records.</p>
            </blockquote>
            <p>
                <a name="storing-tagged-cache-items"></a>
            </p>
            <h3>Storing Tagged Cache Items</h3>
            <p>Cache tags allow you to tag related items in the cache and then flush all cached values that assigned a given tag. You may access a tagged cache by passing in an ordered array of tag names. For example, let's access a tagged cache and <code>put</code>                value in the cache:</p>
            <pre><code>Cache::tags(['people', 'artists'])-&gt;put('John', $john, $minutes);

Cache::tags(['people', 'authors'])-&gt;put('Anne', $anne, $minutes);
</code></pre>
            <p>However, you are not limited to the <code>put</code> method. You may use any cache storage method while working with tags.</p>
            <p>
                <a name="accessing-tagged-cache-items"></a>
            </p>
            <h3>Accessing Tagged Cache Items</h3>
            <p>To retrieve a tagged cache item, pass the same ordered list of tags to the <code>tags</code> method:</p>
            <pre><code>$john = Cache::tags(['people', 'artists'])-&gt;get('John');

$anne = Cache::tags(['people', 'authors'])-&gt;get('Anne');
</code></pre>
            <p>You may flush all items that are assigned a tag or list of tags. For example, this statement would remove all caches tagged with either <code>people</code>, <code>authors</code>, or both. So, both <code>Anne</code> and <code>John</code> would
                be removed from the cache:</p>
            <pre><code>Cache::tags(['people', 'authors'])-&gt;flush();
</code></pre>
            <p>In contrast, this statement would remove only caches tagged with <code>authors</code>, so <code>Anne</code> would be removed, but not <code>John</code>.</p>
            <pre><code>Cache::tags('authors')-&gt;flush();
</code></pre>
            <p>
                <a name="cache-events"></a>
            </p>
            <h2>Cache Events</h2>
            <p>To execute code on every cache operation, you may listen for the <a href="events">events</a> fired by the cache. Typically, you should place these event listeners within the <code>boot</code> method of your <code>EventServiceProvider</code>:</p>
            <pre><code>/**
 * Register any other events for your application.
 *
 * @param  \Illuminate\Contracts\Events\Dispatcher  $events
 * @return void
 */
public function boot(DispatcherContract $events)
{
    parent::boot($events);

    $events-&gt;listen('cache.hit', function ($key, $value) {
        //
    });

    $events-&gt;listen('cache.missed', function ($key) {
        //
    });

    $events-&gt;listen('cache.write', function ($key, $value, $minutes) {
        //
    });

    $events-&gt;listen('cache.delete', function ($key) {
        //
    });
}
</code></pre>

        </article>
    </div>


    <footer class="main">
        <ul>
            <li class="nav-docs"><a href="http://www.golaravel.com/laravel/docs/">中文文档</a>
            </li>
            <li class="nav-community"><a href="http://wenda.golaravel.com" target="_blank">问答社区</a>
            </li>
            <li class="nav-api"><a href="http://laravel.com/api/5.0/" target="_blank">API</a>
            </li>
            <li class="nav-laracasts"><a href="https://laracasts.com" target="_blank">视频教程（国外）</a>
            </li>
            <li class="nav-forge"><a href="https://forge.laravel.com" target="_blank">Forge</a>
            </li>

        </ul>
        <p>Laravel is a trademark of Taylor Otwell. Copyright &copy; Taylor Otwell.</p>
        <p class="less-significant"><a href="http://jackmcdade.com" target="_blank">Design by Jack McDade</a>
        </p>
    </footer>

    <script src="../../assets/js/laravel.js"></script>
    <script src="../../assets/js/viewport-units-buggyfill.js"></script>
    <script>
        window.viewportUnitsBuggyfill.init();
    </script>
    <script type="text/javascript">
        var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
        document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3Fc8d13872a523d9c286aa7affbe0921f1' type='text/javascript'%3E%3C/script%3E"));
    </script>
</body>

</html>