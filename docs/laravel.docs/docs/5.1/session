<!doctype html>
<html lang="zh-CN">

<head>
    <meta charset="utf-8">
    <title>Session - Laravel 5.1 中文文档 | Laravel 中文网</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="author" content="Laravel 中文网">
    <meta name="description" content="Laravel - 为 WEB 艺术家创造的 PHP 框架。| Laravel 中文网">
    <meta name="keywords" content="Laravel中文社区,php框架,laravel中文网,php framework,restful routing,laravel,laravel php">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--[if lte IE 9]>
		<script src="http://cdn.bootcss.com/html5shiv/3.7.2/html5shiv.min.js"></script>
	<![endif]-->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="../../assets/css/laravel.css">
    <link rel="stylesheet" href="../../assets/css/patch.css">
</head>

<body class="docs language-php">

    <span class="overlay"></span>

    <nav class="main">
        <div class="container">
            <a href="http://www.golaravel.com/laravel/" class="brand">
                <img src="../../assets/img/laravel-logo.png" height="30"> Laravel
            </a>

            <div class="responsive-sidebar-nav">
                <a href="session#" class="toggle-slide menu-link btn">&#9776;</a>
            </div>

            <div class="switcher">
                <div class="dropdown">
                    <button class="btn dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true">
                        <!--<span class="faint">v</span> -->
                        5.1
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="index.html">5.1</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/5.0">5.0</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/4.2">4.2</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/4.1">4.1</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/4.0">4.0</a>
                        </li>
                    </ul>
                </div>
            </div>

            <ul class="main-nav">
                <li class="nav-docs"><a href="http://www.golaravel.com/laravel/docs/">中文文档</a>
                </li>
                <li class="nav-community"><a href="http://wenda.golaravel.com" target="_blank">问答社区</a>
                </li>
                <li class="nav-api"><a href="http://laravel.com/api/5.0/" target="_blank">API</a>
                </li>
                <li class="nav-laracasts"><a href="https://laracasts.com" target="_blank">视频教程（国外）</a>
                </li>
                <li class="nav-forge"><a href="https://forge.laravel.com" target="_blank">Forge</a>
                </li>

            </ul>
        </div>
    </nav>

    <nav id="slide-menu" class="slide-menu" role="navigation">

        <div class="brand">
            <a href="http://www.golaravel.com/laravel/">
                <img src="../../assets/img/laravel-logo-white.png" height="50">
            </a>
        </div>

        <ul class="slide-main-nav">
            <li><a href="http://www.golaravel.com/laravel/">首页</a>
            </li>
            <li class="nav-docs"><a href="http://www.golaravel.com/laravel/docs/">中文文档</a>
            </li>
            <li class="nav-community"><a href="http://wenda.golaravel.com" target="_blank">问答社区</a>
            </li>
            <li class="nav-api"><a href="http://laravel.com/api/5.0/" target="_blank">API</a>
            </li>
            <li class="nav-laracasts"><a href="https://laracasts.com" target="_blank">视频教程（国外）</a>
            </li>
            <li class="nav-forge"><a href="https://forge.laravel.com" target="_blank">Forge</a>
            </li>

        </ul>

        <div class="slide-docs-nav">
            <h2>文档目录</h2>
            <ul>
                <li>序言
                    <ul>
                        <li><a href="releases">版本说明</a>
                        </li>
                        <li><a href="upgrade">升级指南</a>
                        </li>
                        <li><a href="contributions">贡献指南</a>
                        </li>
                        <li><a href="http://www.golaravel.com/laravel/api/5.1">API 文档</a>
                        </li>
                    </ul>
                </li>
                <li>安装设置
                    <ul>
                        <li><a href="installation">安装</a>
                        </li>
                        <li><a href="homestead">Homestead</a>
                        </li>
                    </ul>
                </li>
                <li>教程
                    <ul>
                        <li><a href="quickstart">入门学习任务</a>
                        </li>
                        <li><a href="quickstart-intermediate">中级学习任务</a>
                        </li>
                    </ul>
                </li>
                <li>基础知识
                    <ul>
                        <li><a href="routing">路由</a>
                        </li>
                        <li><a href="middleware">中间件</a>
                        </li>
                        <li><a href="controllers">控制器</a>
                        </li>
                        <li><a href="requests">请求</a>
                        </li>
                        <li><a href="responses">响应</a>
                        </li>
                        <li><a href="views">视图</a>
                        </li>
                        <li><a href="blade">Blade 模板</a>
                        </li>
                    </ul>
                </li>
                <li>系统架构
                    <ul>
                        <li><a href="lifecycle">请求的生命周期</a>
                        </li>
                        <li><a href="structure">应用程序结构</a>
                        </li>
                        <li><a href="providers">服务提供者</a>
                        </li>
                        <li><a href="container">服务容器</a>
                        </li>
                        <li><a href="contracts">Contract</a>
                        </li>
                        <li><a href="facades">Facade</a>
                        </li>
                    </ul>
                </li>
                <li>系统服务
                    <ul>
                        <li><a href="authentication">认证</a>
                        </li>
                        <li><a href="authorization">授权</a>
                        </li>
                        <li><a href="artisan">Artisan 控制台</a>
                        </li>
                        <li><a href="billing">计费</a>
                        </li>
                        <li><a href="cache">缓存</a>
                        </li>
                        <li><a href="collections">集合</a>
                        </li>
                        <li><a href="elixir">Elixir</a>
                        </li>
                        <li><a href="encryption">加密</a>
                        </li>
                        <li><a href="errors">错误与日志</a>
                        </li>
                        <li><a href="events">事件</a>
                        </li>
                        <li><a href="filesystem">文件系统 / 云存储</a>
                        </li>
                        <li><a href="hashing">哈希</a>
                        </li>
                        <li><a href="helpers">辅助方法</a>
                        </li>
                        <li><a href="localization">本地化</a>
                        </li>
                        <li><a href="mail">邮件</a>
                        </li>
                        <li><a href="packages">扩展包开发</a>
                        </li>
                        <li><a href="pagination">分页</a>
                        </li>
                        <li><a href="queues">队列</a>
                        </li>
                        <li><a href="redis">Redis</a>
                        </li>
                        <li><a href="session">会话</a>
                        </li>
                        <li><a href="envoy">SSH 任务</a>
                        </li>
                        <li><a href="scheduling">任务调度</a>
                        </li>
                        <li><a href="testing">测试</a>
                        </li>
                        <li><a href="validation">验证</a>
                        </li>
                    </ul>
                </li>
                <li>数据库
                    <ul>
                        <li><a href="database">入门</a>
                        </li>
                        <li><a href="queries">查询构造器</a>
                        </li>
                        <li><a href="migrations">迁移</a>
                        </li>
                        <li><a href="seeding">数据填充</a>
                        </li>
                    </ul>
                </li>
                <li>Eloquent ORM
                    <ul>
                        <li><a href="eloquent">入门</a>
                        </li>
                        <li><a href="eloquent-relationships">关系</a>
                        </li>
                        <li><a href="eloquent-collections">集合</a>
                        </li>
                        <li><a href="eloquent-mutators">调整修改</a>
                        </li>
                        <li><a href="eloquent-serialization">序列化</a>
                        </li>
                    </ul>
                </li>
            </ul>

        </div>

    </nav>

    <div class="docs-wrapper container">

        <section class="sidebar">
            <ul>
                <li>序言
                    <ul>
                        <li><a href="releases">版本说明</a>
                        </li>
                        <li><a href="upgrade">升级指南</a>
                        </li>
                        <li><a href="contributions">贡献指南</a>
                        </li>
                        <li><a href="http://www.golaravel.com/laravel/api/5.1">API 文档</a>
                        </li>
                    </ul>
                </li>
                <li>安装设置
                    <ul>
                        <li><a href="installation">安装</a>
                        </li>
                        <li><a href="homestead">Homestead</a>
                        </li>
                    </ul>
                </li>
                <li>教程
                    <ul>
                        <li><a href="quickstart">入门学习任务</a>
                        </li>
                        <li><a href="quickstart-intermediate">中级学习任务</a>
                        </li>
                    </ul>
                </li>
                <li>基础知识
                    <ul>
                        <li><a href="routing">路由</a>
                        </li>
                        <li><a href="middleware">中间件</a>
                        </li>
                        <li><a href="controllers">控制器</a>
                        </li>
                        <li><a href="requests">请求</a>
                        </li>
                        <li><a href="responses">响应</a>
                        </li>
                        <li><a href="views">视图</a>
                        </li>
                        <li><a href="blade">Blade 模板</a>
                        </li>
                    </ul>
                </li>
                <li>系统架构
                    <ul>
                        <li><a href="lifecycle">请求的生命周期</a>
                        </li>
                        <li><a href="structure">应用程序结构</a>
                        </li>
                        <li><a href="providers">服务提供者</a>
                        </li>
                        <li><a href="container">服务容器</a>
                        </li>
                        <li><a href="contracts">Contract</a>
                        </li>
                        <li><a href="facades">Facade</a>
                        </li>
                    </ul>
                </li>
                <li>系统服务
                    <ul>
                        <li><a href="authentication">认证</a>
                        </li>
                        <li><a href="authorization">授权</a>
                        </li>
                        <li><a href="artisan">Artisan 控制台</a>
                        </li>
                        <li><a href="billing">计费</a>
                        </li>
                        <li><a href="cache">缓存</a>
                        </li>
                        <li><a href="collections">集合</a>
                        </li>
                        <li><a href="elixir">Elixir</a>
                        </li>
                        <li><a href="encryption">加密</a>
                        </li>
                        <li><a href="errors">错误与日志</a>
                        </li>
                        <li><a href="events">事件</a>
                        </li>
                        <li><a href="filesystem">文件系统 / 云存储</a>
                        </li>
                        <li><a href="hashing">哈希</a>
                        </li>
                        <li><a href="helpers">辅助方法</a>
                        </li>
                        <li><a href="localization">本地化</a>
                        </li>
                        <li><a href="mail">邮件</a>
                        </li>
                        <li><a href="packages">扩展包开发</a>
                        </li>
                        <li><a href="pagination">分页</a>
                        </li>
                        <li><a href="queues">队列</a>
                        </li>
                        <li><a href="redis">Redis</a>
                        </li>
                        <li><a href="session">会话</a>
                        </li>
                        <li><a href="envoy">SSH 任务</a>
                        </li>
                        <li><a href="scheduling">任务调度</a>
                        </li>
                        <li><a href="testing">测试</a>
                        </li>
                        <li><a href="validation">验证</a>
                        </li>
                    </ul>
                </li>
                <li>数据库
                    <ul>
                        <li><a href="database">入门</a>
                        </li>
                        <li><a href="queries">查询构造器</a>
                        </li>
                        <li><a href="migrations">迁移</a>
                        </li>
                        <li><a href="seeding">数据填充</a>
                        </li>
                    </ul>
                </li>
                <li>Eloquent ORM
                    <ul>
                        <li><a href="eloquent">入门</a>
                        </li>
                        <li><a href="eloquent-relationships">关系</a>
                        </li>
                        <li><a href="eloquent-collections">集合</a>
                        </li>
                        <li><a href="eloquent-mutators">调整修改</a>
                        </li>
                        <li><a href="eloquent-serialization">序列化</a>
                        </li>
                    </ul>
                </li>
            </ul>

        </section>

        <article>
            <h1>Session</h1>
            <ul>
                <li><a href="session#introduction">Introduction</a>
                </li>
                <li><a href="session#basic-usage">Basic Usage</a>
                    <ul>
                        <li><a href="session#flash-data">Flash Data</a>
                        </li>
                    </ul>
                </li>
                <li><a href="session#adding-custom-session-drivers">Adding Custom Session Drivers</a>
                </li>
            </ul>
            <p>
                <a name="introduction"></a>
            </p>
            <h2>Introduction</h2>
            <p>Since HTTP driven applications are stateless, sessions provide a way to store information about the user across requests. Laravel ships with a variety of session back-ends available for use through a clean, unified API. Support for popular
                back-ends such as <a href="http://memcached.org" target="_blank">Memcached</a>, <a href="http://redis.io" target="_blank">Redis</a>, and databases is included out of the box.</p>
            <h3>Configuration</h3>
            <p>The session configuration file is stored at <code>config/session.php</code>. Be sure to review the well documented options available to you in this file. By default, Laravel is configured to use the <code>file</code> session driver, which
                will work well for many applications. In production applications, you may consider using the <code>memcached</code> or <code>redis</code> drivers for even faster session performance.</p>
            <p>The session <code>driver</code> defines where session data will be stored for each request. Laravel ships with several great drivers out of the box:</p>
            <div class="content-list" markdown="1">
                - `file` - sessions are stored in `storage/framework/sessions`. - `cookie` - sessions are stored in secure, encrypted cookies. - `database` - sessions are stored in a database used by your application. - `memcached` / `redis` - sessions are stored in
                one of these fast, cache based stores. - `array` - sessions are stored in a simple PHP array and will not be persisted across requests.
            </div>
            <blockquote>
                <p><strong>Note:</strong> The array driver is typically used for running <a href="testing">tests</a> to prevent session data from persisting.</p>
            </blockquote>
            <h3>Driver Prerequisites</h3>
            <h4>Database</h4>
            <p>When using the <code>database</code> session driver, you will need to setup a table to contain the session items. Below is an example <code>Schema</code> declaration for the table:</p>
            <pre><code>Schema::create('sessions', function ($table) {
    $table-&gt;string('id')-&gt;unique();
    $table-&gt;text('payload');
    $table-&gt;integer('last_activity');
});
</code></pre>
            <p>You may use the <code>session:table</code> Artisan command to generate this migration for you!</p>
            <pre><code>php artisan session:table

composer dump-autoload

php artisan migrate
</code></pre>
            <h4>Redis</h4>
            <p>Before using Redis sessions with Laravel, you will need to install the <code>predis/predis</code> package (~1.0) via Composer.</p>
            <h3>Other Session Considerations</h3>
            <p>The Laravel framework uses the <code>flash</code> session key internally, so you should not add an item to the session by that name.</p>
            <p>If you need all stored session data to be encrypted, set the <code>encrypt</code> configuration option to <code>true</code>.</p>
            <p>
                <a name="basic-usage"></a>
            </p>
            <h2>Basic Usage</h2>
            <h4>Accessing The Session</h4>
            <p>First, let's access the session. We can access the session instance via the HTTP request, which can be type-hinted on a controller method. Remember, controller method dependencies are injected via the Laravel <a href="container">service container</a>:</p>
            <pre><code>&lt;?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;

class UserController extends Controller
{
    /**
     * Show the profile for the given user.
     *
     * @param  Request  $request
     * @param  int  $id
     * @return Response
     */
    public function showProfile(Request $request, $id)
    {
        $value = $request-&gt;session()-&gt;get('key');

        //
    }
}
</code></pre>
            <p>When you retrieve a value from the session, you may also pass a default value as the second argument to the <code>get</code> method. This default value will be returned if the specified key does not exist in the session. If you pass a <code>Closure</code>                as the default value to the <code>get</code> method, the <code>Closure</code> will be executed and its result returned:</p>
            <pre><code>$value = $request-&gt;session()-&gt;get('key', 'default');

$value = $request-&gt;session()-&gt;get('key', function() {
    return 'default';
});
</code></pre>
            <p>If you would like to retrieve all data from the session, you may use the <code>all</code> method:</p>
            <pre><code>$data = $request-&gt;session()-&gt;all();
</code></pre>
            <p>You may also use the global <code>session</code> PHP function to retrieve and store data in the session:</p>
            <pre><code>Route::get('home', function () {
    // Retrieve a piece of data from the session...
    $value = session('key');

    // Store a piece of data in the session...
    session(['key' =&gt; 'value']);
});
</code></pre>
            <h4>Determining If An Item Exists In The Session</h4>
            <p>The <code>has</code> method may be used to check if an item exists in the session. This method will return <code>true</code> if the item exists:</p>
            <pre><code>if ($request-&gt;session()-&gt;has('users')) {
    //
}
</code></pre>
            <h4>Storing Data In The Session</h4>
            <p>Once you have access to the session instance, you may call a variety of functions to interact with the underlying data. For example, the <code>put</code> method stores a new piece of data in the session:</p>
            <pre><code>$request-&gt;session()-&gt;put('key', 'value');
</code></pre>
            <h4>Pushing To Array Session Values</h4>
            <p>The <code>push</code> method may be used to push a new value onto a session value that is an array. For example, if the <code>user.teams</code> key contains an array of team names, you may push a new value onto the array like so:</p>
            <pre><code>$request-&gt;session()-&gt;push('user.teams', 'developers');
</code></pre>
            <h4>Retrieving And Deleting An Item</h4>
            <p>The <code>pull</code> method will retrieve and delete an item from the session:</p>
            <pre><code>$value = $request-&gt;session()-&gt;pull('key', 'default');
</code></pre>
            <h4>Deleting Items From The Session</h4>
            <p>The <code>forget</code> method will remove a piece of data from the session. If you would like to remove all data from the session, you may use the <code>flush</code> method:</p>
            <pre><code>$request-&gt;session()-&gt;forget('key');

$request-&gt;session()-&gt;flush();
</code></pre>
            <h4>Regenerating The Session ID</h4>
            <p>If you need to regenerate the session ID, you may use the <code>regenerate</code> method:</p>
            <pre><code>$request-&gt;session()-&gt;regenerate();
</code></pre>
            <p>
                <a name="flash-data"></a>
            </p>
            <h3>Flash Data</h3>
            <p>Sometimes you may wish to store items in the session only for the next request. You may do so using the <code>flash</code> method. Data stored in the session using this method will only be available during the subsequent HTTP request, and
                then will be deleted. Flash data is primarily useful for short-lived status messages:</p>
            <pre><code>$request-&gt;session()-&gt;flash('status', 'Task was successful!');
</code></pre>
            <p>If you need to keep your flash data around for even more requests, you may use the <code>reflash</code> method, which will keep all of the flash data around for an additional request. If you only need to keep specific flash data around, you
                may use the <code>keep</code> method:</p>
            <pre><code>$request-&gt;session()-&gt;reflash();

$request-&gt;session()-&gt;keep(['username', 'email']);
</code></pre>
            <p>
                <a name="adding-custom-session-drivers"></a>
            </p>
            <h2>Adding Custom Session Drivers</h2>
            <p>To add additional drivers to Laravel's session back-end, you may use the <code>extend</code> method on the <code>Session</code> <a href="facades">facade</a>. You can call the <code>extend</code> method from the <code>boot</code>                method of a <a href="providers">service provider</a>:</p>
            <pre><code>&lt;?php

namespace App\Providers;

use Session;
use App\Extensions\MongoSessionStore;
use Illuminate\Support\ServiceProvider;

class SessionServiceProvider extends ServiceProvider
{
    /**
     * Perform post-registration booting of services.
     *
     * @return void
     */
    public function boot()
    {
        Session::extend('mongo', function($app) {
            // Return implementation of SessionHandlerInterface...
            return new MongoSessionStore;
        });
    }

    /**
     * Register bindings in the container.
     *
     * @return void
     */
    public function register()
    {
        //
    }
}
</code></pre>
            <p>Note that your custom session driver should implement the <code>SessionHandlerInterface</code>. This interface contains just a few simple methods we need to implement. A stubbed MongoDB implementation looks something like this:</p>
            <pre><code>&lt;?php

namespace App\Extensions;

class MongoHandler implements SessionHandlerInterface
{
    public function open($savePath, $sessionName) {}
    public function close() {}
    public function read($sessionId) {}
    public function write($sessionId, $data) {}
    public function destroy($sessionId) {}
    public function gc($lifetime) {}
}
</code></pre>
            <p>Since these methods are not as readily understandable as the cache <code>StoreInterface</code>, let's quickly cover what each of the methods do:</p>
            <div class="content-list" markdown="1">
                - The `open` method would typically be used in file based session store systems. Since Laravel ships with a `file` session driver, you will almost never need to put anything in this method. You can leave it as an empty stub. It is simply a fact of poor
                interface design (which we'll discuss later) that PHP requires us to implement this method. - The `close` method, like the `open` method, can also usually be disregarded. For most drivers, it is not needed. - The `read` method should return
                the string version of the session data associated with the given `$sessionId`. There is no need to do any serialization or other encoding when retrieving or storing session data in your driver, as Laravel will perform the serialization
                for you. - The `write` method should write the given `$data` string associated with the `$sessionId` to some persistent storage system, such as MongoDB, Dynamo, etc. - The `destroy` method should remove the data associated with the `$sessionId`
                from persistent storage. - The `gc` method should destroy all session data that is older than the given `$lifetime`, which is a UNIX timestamp. For self-expiring systems like Memcached and Redis, this method may be left empty.
            </div>
            <p>Once the session driver has been registered, you may use the <code>mongo</code> driver in your <code>config/session.php</code> configuration file.</p>

        </article>
    </div>


    <footer class="main">
        <ul>
            <li class="nav-docs"><a href="http://www.golaravel.com/laravel/docs/">中文文档</a>
            </li>
            <li class="nav-community"><a href="http://wenda.golaravel.com" target="_blank">问答社区</a>
            </li>
            <li class="nav-api"><a href="http://laravel.com/api/5.0/" target="_blank">API</a>
            </li>
            <li class="nav-laracasts"><a href="https://laracasts.com" target="_blank">视频教程（国外）</a>
            </li>
            <li class="nav-forge"><a href="https://forge.laravel.com" target="_blank">Forge</a>
            </li>

        </ul>
        <p>Laravel is a trademark of Taylor Otwell. Copyright &copy; Taylor Otwell.</p>
        <p class="less-significant"><a href="http://jackmcdade.com" target="_blank">Design by Jack McDade</a>
        </p>
    </footer>

    <script src="../../assets/js/laravel.js"></script>
    <script src="../../assets/js/viewport-units-buggyfill.js"></script>
    <script>
        window.viewportUnitsBuggyfill.init();
    </script>
    <script type="text/javascript">
        var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
        document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3Fc8d13872a523d9c286aa7affbe0921f1' type='text/javascript'%3E%3C/script%3E"));
    </script>
</body>

</html>