<!doctype html>
<html lang="zh-CN">

<head>
    <meta charset="utf-8">
    <title>视图 - Laravel 5.1 中文文档 | Laravel 中文网</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="author" content="Laravel 中文网">
    <meta name="description" content="Laravel - 为 WEB 艺术家创造的 PHP 框架。| Laravel 中文网">
    <meta name="keywords" content="Laravel中文社区,php框架,laravel中文网,php framework,restful routing,laravel,laravel php">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--[if lte IE 9]>
		<script src="http://cdn.bootcss.com/html5shiv/3.7.2/html5shiv.min.js"></script>
	<![endif]-->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="../../assets/css/laravel.css">
    <link rel="stylesheet" href="../../assets/css/patch.css">
</head>

<body class="docs language-php">

    <span class="overlay"></span>

    <nav class="main">
        <div class="container">
            <a href="http://www.golaravel.com/laravel/" class="brand">
                <img src="../../assets/img/laravel-logo.png" height="30"> Laravel
            </a>

            <div class="responsive-sidebar-nav">
                <a href="views#" class="toggle-slide menu-link btn">&#9776;</a>
            </div>

            <div class="switcher">
                <div class="dropdown">
                    <button class="btn dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true">
                        <!--<span class="faint">v</span> -->
                        5.1
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="index.html">5.1</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/5.0">5.0</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/4.2">4.2</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/4.1">4.1</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/4.0">4.0</a>
                        </li>
                    </ul>
                </div>
            </div>

            <ul class="main-nav">
                <li class="nav-docs"><a href="http://www.golaravel.com/laravel/docs/">中文文档</a>
                </li>
                <li class="nav-community"><a href="http://wenda.golaravel.com" target="_blank">问答社区</a>
                </li>
                <li class="nav-api"><a href="http://laravel.com/api/5.0/" target="_blank">API</a>
                </li>
                <li class="nav-laracasts"><a href="https://laracasts.com" target="_blank">视频教程（国外）</a>
                </li>
                <li class="nav-forge"><a href="https://forge.laravel.com" target="_blank">Forge</a>
                </li>

            </ul>
        </div>
    </nav>

    <nav id="slide-menu" class="slide-menu" role="navigation">

        <div class="brand">
            <a href="http://www.golaravel.com/laravel/">
                <img src="../../assets/img/laravel-logo-white.png" height="50">
            </a>
        </div>

        <ul class="slide-main-nav">
            <li><a href="http://www.golaravel.com/laravel/">首页</a>
            </li>
            <li class="nav-docs"><a href="http://www.golaravel.com/laravel/docs/">中文文档</a>
            </li>
            <li class="nav-community"><a href="http://wenda.golaravel.com" target="_blank">问答社区</a>
            </li>
            <li class="nav-api"><a href="http://laravel.com/api/5.0/" target="_blank">API</a>
            </li>
            <li class="nav-laracasts"><a href="https://laracasts.com" target="_blank">视频教程（国外）</a>
            </li>
            <li class="nav-forge"><a href="https://forge.laravel.com" target="_blank">Forge</a>
            </li>

        </ul>

        <div class="slide-docs-nav">
            <h2>文档目录</h2>
            <ul>
                <li>序言
                    <ul>
                        <li><a href="releases">版本说明</a>
                        </li>
                        <li><a href="upgrade">升级指南</a>
                        </li>
                        <li><a href="contributions">贡献指南</a>
                        </li>
                        <li><a href="http://www.golaravel.com/laravel/api/5.1">API 文档</a>
                        </li>
                    </ul>
                </li>
                <li>安装设置
                    <ul>
                        <li><a href="installation">安装</a>
                        </li>
                        <li><a href="homestead">Homestead</a>
                        </li>
                    </ul>
                </li>
                <li>教程
                    <ul>
                        <li><a href="quickstart">入门学习任务</a>
                        </li>
                        <li><a href="quickstart-intermediate">中级学习任务</a>
                        </li>
                    </ul>
                </li>
                <li>基础知识
                    <ul>
                        <li><a href="routing">路由</a>
                        </li>
                        <li><a href="middleware">中间件</a>
                        </li>
                        <li><a href="controllers">控制器</a>
                        </li>
                        <li><a href="requests">请求</a>
                        </li>
                        <li><a href="responses">响应</a>
                        </li>
                        <li><a href="views">视图</a>
                        </li>
                        <li><a href="blade">Blade 模板</a>
                        </li>
                    </ul>
                </li>
                <li>系统架构
                    <ul>
                        <li><a href="lifecycle">请求的生命周期</a>
                        </li>
                        <li><a href="structure">应用程序结构</a>
                        </li>
                        <li><a href="providers">服务提供者</a>
                        </li>
                        <li><a href="container">服务容器</a>
                        </li>
                        <li><a href="contracts">Contract</a>
                        </li>
                        <li><a href="facades">Facade</a>
                        </li>
                    </ul>
                </li>
                <li>系统服务
                    <ul>
                        <li><a href="authentication">认证</a>
                        </li>
                        <li><a href="authorization">授权</a>
                        </li>
                        <li><a href="artisan">Artisan 控制台</a>
                        </li>
                        <li><a href="billing">计费</a>
                        </li>
                        <li><a href="cache">缓存</a>
                        </li>
                        <li><a href="collections">集合</a>
                        </li>
                        <li><a href="elixir">Elixir</a>
                        </li>
                        <li><a href="encryption">加密</a>
                        </li>
                        <li><a href="errors">错误与日志</a>
                        </li>
                        <li><a href="events">事件</a>
                        </li>
                        <li><a href="filesystem">文件系统 / 云存储</a>
                        </li>
                        <li><a href="hashing">哈希</a>
                        </li>
                        <li><a href="helpers">辅助方法</a>
                        </li>
                        <li><a href="localization">本地化</a>
                        </li>
                        <li><a href="mail">邮件</a>
                        </li>
                        <li><a href="packages">扩展包开发</a>
                        </li>
                        <li><a href="pagination">分页</a>
                        </li>
                        <li><a href="queues">队列</a>
                        </li>
                        <li><a href="redis">Redis</a>
                        </li>
                        <li><a href="session">会话</a>
                        </li>
                        <li><a href="envoy">SSH 任务</a>
                        </li>
                        <li><a href="scheduling">任务调度</a>
                        </li>
                        <li><a href="testing">测试</a>
                        </li>
                        <li><a href="validation">验证</a>
                        </li>
                    </ul>
                </li>
                <li>数据库
                    <ul>
                        <li><a href="database">入门</a>
                        </li>
                        <li><a href="queries">查询构造器</a>
                        </li>
                        <li><a href="migrations">迁移</a>
                        </li>
                        <li><a href="seeding">数据填充</a>
                        </li>
                    </ul>
                </li>
                <li>Eloquent ORM
                    <ul>
                        <li><a href="eloquent">入门</a>
                        </li>
                        <li><a href="eloquent-relationships">关系</a>
                        </li>
                        <li><a href="eloquent-collections">集合</a>
                        </li>
                        <li><a href="eloquent-mutators">调整修改</a>
                        </li>
                        <li><a href="eloquent-serialization">序列化</a>
                        </li>
                    </ul>
                </li>
            </ul>

        </div>

    </nav>

    <div class="docs-wrapper container">

        <section class="sidebar">
            <ul>
                <li>序言
                    <ul>
                        <li><a href="releases">版本说明</a>
                        </li>
                        <li><a href="upgrade">升级指南</a>
                        </li>
                        <li><a href="contributions">贡献指南</a>
                        </li>
                        <li><a href="http://www.golaravel.com/laravel/api/5.1">API 文档</a>
                        </li>
                    </ul>
                </li>
                <li>安装设置
                    <ul>
                        <li><a href="installation">安装</a>
                        </li>
                        <li><a href="homestead">Homestead</a>
                        </li>
                    </ul>
                </li>
                <li>教程
                    <ul>
                        <li><a href="quickstart">入门学习任务</a>
                        </li>
                        <li><a href="quickstart-intermediate">中级学习任务</a>
                        </li>
                    </ul>
                </li>
                <li>基础知识
                    <ul>
                        <li><a href="routing">路由</a>
                        </li>
                        <li><a href="middleware">中间件</a>
                        </li>
                        <li><a href="controllers">控制器</a>
                        </li>
                        <li><a href="requests">请求</a>
                        </li>
                        <li><a href="responses">响应</a>
                        </li>
                        <li><a href="views">视图</a>
                        </li>
                        <li><a href="blade">Blade 模板</a>
                        </li>
                    </ul>
                </li>
                <li>系统架构
                    <ul>
                        <li><a href="lifecycle">请求的生命周期</a>
                        </li>
                        <li><a href="structure">应用程序结构</a>
                        </li>
                        <li><a href="providers">服务提供者</a>
                        </li>
                        <li><a href="container">服务容器</a>
                        </li>
                        <li><a href="contracts">Contract</a>
                        </li>
                        <li><a href="facades">Facade</a>
                        </li>
                    </ul>
                </li>
                <li>系统服务
                    <ul>
                        <li><a href="authentication">认证</a>
                        </li>
                        <li><a href="authorization">授权</a>
                        </li>
                        <li><a href="artisan">Artisan 控制台</a>
                        </li>
                        <li><a href="billing">计费</a>
                        </li>
                        <li><a href="cache">缓存</a>
                        </li>
                        <li><a href="collections">集合</a>
                        </li>
                        <li><a href="elixir">Elixir</a>
                        </li>
                        <li><a href="encryption">加密</a>
                        </li>
                        <li><a href="errors">错误与日志</a>
                        </li>
                        <li><a href="events">事件</a>
                        </li>
                        <li><a href="filesystem">文件系统 / 云存储</a>
                        </li>
                        <li><a href="hashing">哈希</a>
                        </li>
                        <li><a href="helpers">辅助方法</a>
                        </li>
                        <li><a href="localization">本地化</a>
                        </li>
                        <li><a href="mail">邮件</a>
                        </li>
                        <li><a href="packages">扩展包开发</a>
                        </li>
                        <li><a href="pagination">分页</a>
                        </li>
                        <li><a href="queues">队列</a>
                        </li>
                        <li><a href="redis">Redis</a>
                        </li>
                        <li><a href="session">会话</a>
                        </li>
                        <li><a href="envoy">SSH 任务</a>
                        </li>
                        <li><a href="scheduling">任务调度</a>
                        </li>
                        <li><a href="testing">测试</a>
                        </li>
                        <li><a href="validation">验证</a>
                        </li>
                    </ul>
                </li>
                <li>数据库
                    <ul>
                        <li><a href="database">入门</a>
                        </li>
                        <li><a href="queries">查询构造器</a>
                        </li>
                        <li><a href="migrations">迁移</a>
                        </li>
                        <li><a href="seeding">数据填充</a>
                        </li>
                    </ul>
                </li>
                <li>Eloquent ORM
                    <ul>
                        <li><a href="eloquent">入门</a>
                        </li>
                        <li><a href="eloquent-relationships">关系</a>
                        </li>
                        <li><a href="eloquent-collections">集合</a>
                        </li>
                        <li><a href="eloquent-mutators">调整修改</a>
                        </li>
                        <li><a href="eloquent-serialization">序列化</a>
                        </li>
                    </ul>
                </li>
            </ul>

        </section>

        <article>
            <h1>视图</h1>
            <ul>
                <li><a href="views#basic-usage">基本用法</a>
                    <ul>
                        <li><a href="views#passing-data-to-views">向视图传递数据</a>
                        </li>
                        <li><a href="views#sharing-data-with-all-views">为所有视图共享数据</a>
                        </li>
                    </ul>
                </li>
                <li><a href="views#view-composers">视图组件</a>
                </li>
            </ul>
            <p>
                <a name="basic-usage"></a>
            </p>
            <h2>基本用法</h2>
            <p>视图包含了应用程序渲染的HTML数据，并将应用程序的显示逻辑与控制逻辑有效的分离开。在Laravel中，视图被保存在<code>resources/views</code>目录中。</p>
            <p>一个简单的视图看起来是这样的：</p>
            <pre><code>&lt;!-- View stored in resources/views/greeting.php --&gt;

&lt;html&gt;
    &lt;body&gt;
        &lt;h1&gt;Hello, &lt;?php echo $name; ?&gt;&lt;/h1&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
            <p>将上面的视图代码被保存在<code>resources/views/greeting.php</code>文件中，我们就可以使用<code>view</code>辅助方法来将这个视图作为响应返回：</p>
            <pre><code>Route::get('/', function ()    {
    return view('greeting', ['name' =&gt; 'James']);
});
</code></pre>
            <p>正如你所见到的，传递给<code>view</code>辅助方法的第一个参数对应视图文件在<code>resources/views</code>目录中的名称。传递给<code>view</code>辅助方法的第二个参数是一个能在视图内取用的数据数组。</p>
            <p>当然，视图可以被嵌套保存在<code>resoureces/views</code>目录的子目录中，&quot;.&quot;号被用来引用嵌套的视图。例如，可以通过下面语句引用<code>resoureces/views/admin/profile.php</code>这个视图：</p>
            <pre><code>return view('admin.profile', $data);
</code></pre>
            <h4>判断视图是否存在</h4>
            <p>如果需要判断视图是否存在，可以在不带参数的<code>view</code>辅助方法后使用<code>exists</code>方法。如果视图存在，该方法会返回<code>true</code>：</p>
            <pre><code>if (view()-&gt;exists('emails.customer')) {
    //
}
</code></pre>
            <p>当不带参数的<code>view</code>辅助方法被调用时，会返回一个<code>Illuminate\Contracts\View\Factory</code>实例，通过这个实例你可以调用视图工厂（View Factory）的所有方法。</p>
            <p>
                <a name="view-data"></a>
            </p>
            <h3>视图数据</h3>
            <p>
                <a name="passing-data-to-views"></a>
            </p>
            <h4>向视图传递数据</h4>
            <p>像前面例子那样，你可以很容易的向视图传送一组数据。</p>
            <pre><code>return view('greetings', ['name' =&gt; 'Victoria']);
</code></pre>
            <p>当使用这种办法向视图传递数据时，<code>$data</code>应该是 键/值 对应的数组数据。在视图中，你可以使用对应的键来获取值，像这样<code>&lt;?php echo $key; ?&gt;</code>。同样的，你也可以使用 <code>with</code> 方法向视图传递数据，从而避免以数组的形式向 <code>view</code> 助手函数传递完整的数据。</p>
            <pre><code>$view = view('greeting')-&gt;with('name', 'Victoria');
</code></pre>
            <p>
                <a name="sharing-data-with-all-views"></a>
            </p>
            <h4>把数据共享给所有的视图</h4>
            <p>有时候，你可能需要共享一份数据给所有的视图，你应该使用视图工厂（View Factory）的<code>share</code>方法。通常，我们在服务提供者的<code>boot</code>方法中调用<code>share</code>方法来完成注册。如果需要同时共享多份数据，你可以将所有对<code>share</code>方法的调用放在一个服务提供者中（<code>AppServiceProvider</code>或者其他），或者单独的为每个需要共享的数据建立一个服务提供者。</p>
            <pre><code>&lt;?php

namespace App\Providers;

class AppServiceProvider extends ServiceProvider
{
    /**
     * Bootstrap any application services.
     *
     * @return void
     */
    public function boot()
    {
        view()-&gt;share('key', 'value');
    }

    /**
     * Register the service provider.
     *
     * @return void
     */
    public function register()
    {
        //
    }
}
</code></pre>
            <p>
                <a name="view-composers"></a>
            </p>
            <h2>视图组件</h2>
            <p>视图组件是视图被渲染时被调用的闭包或者类方法。你可以通过视图组件将某些数据跟视图绑定到一起，这样数据就会在视图被渲染的时候自动加载。视图组件可以帮助你将这一功能的实现逻辑组织到同一个地方。</p>
            <p>首先，在<a href="providers">服务提供者</a>中注册我们的视图组件，并使用<code>view</code>辅助方法获取底层<code>Illuminate\Contracts\View\Factory</code>合约的实现（contract implementation）。在Laravel中，没有为视图组件设置一个默认的目录，所以我们可以将视图组件的文件任意喜欢的位置。例如，你可以新建一个<code>App\Http\ViewComposer</code>目录来保存这些文件。</p>
            <pre><code>&lt;?php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;

class ComposerServiceProvider extends ServiceProvider
{
    /**
     * Register bindings in the container.
     *
     * @return void
     */
    public function boot()
    {
        // Using class based composers...
        view()-&gt;composer(
            'profile', 'App\Http\ViewComposers\ProfileComposer'
        );

        // Using Closure based composers...
        view()-&gt;composer('dashboard', function ($view) {

        });
    }

    /**
     * Register the service provider.
     *
     * @return void
     */
    public function register()
    {
        //
    }
}
</code></pre>
            <blockquote>
                <p><strong>注意：</strong> 在建立的服务提供者中注册视图组件后，应该同时把这个服务提供者添加到<code>config/app.php</code>配置文件的<code>providers</code>数组中，来完成服务提供者的注册，服务提供者在<code>providers</code>数组中注册后才可以被应用程序调用。</p>
            </blockquote>
            <p>现在，我们已经成功的注册了视图组件，每当<code>profile</code>视图被渲染的时候，<code>ProfileComposer@compose</code>方法都会被调用。我们来实现这个视图组件类：</p>
            <pre><code>&lt;?php

namespace App\Http\ViewComposers;

use Illuminate\Contracts\View\View;
use Illuminate\Users\Repository as UserRepository;

class ProfileComposer
{
    /**
     * The user repository implementation.
     *
     * @var UserRepository
     */
    protected $users;

    /**
     * Create a new profile composer.
     *
     * @param  UserRepository  $users
     * @return void
     */
    public function __construct(UserRepository $users)
    {
        // Dependencies automatically resolved by service container...
        $this-&gt;users = $users;
    }

    /**
     * Bind data to the view.
     *
     * @param  View  $view
     * @return void
     */
    public function compose(View $view)
    {
        $view-&gt;with('count', $this-&gt;users-&gt;count());
    }
}
</code></pre>
            <p>在视图被渲染之前，<code>ProfileComposer</code>的<code>compose</code>方法会被调用，同时传入一个<code>Illuminate\Contracts\View\View</code>实例。你可以在<code>View</code>的实例上使用<code>with</code>方法将数据绑定到视图。</p>
            <blockquote>
                <p><strong>注意：</strong> 所有的视图组件会通过<a href="container">服务容器</a>进行解析,所以你可以在视图组件的构造函数中声明你所需的依赖，如上面代码中的<code>UserRepository</code>依赖。</p>
            </blockquote>
            <h4>把视图组件绑定到多个视图</h4>
            <p>如果你需要将视图组件绑定到多个视图，可以将包含视图名称的数组作为第一个参数传入<code>composer</code>方法：</p>
            <pre><code>view()-&gt;composer(
    ['profile', 'dashboard'],
    'App\Http\ViewComposers\MyViewComposer'
);
</code></pre>
            <p><code>composer</code>方法接受<code>*</code>作为通配符，可以使用<code>*</code>将视图组件绑定到所有的视图。</p>
            <pre><code>view()-&gt;composer('*', function ($view) {
    //
});
</code></pre>
            <h3>视图创建者</h3>
            <p>视图创建者（View <strong>creators</strong>）跟视图组件几乎完全一样，不同的是视图创建者是在视图实例化之后立即执行，而视图组件在视图被渲染的时候才会执行。注册一个视图创建者可以使用<code>creator</code>方法：</p>
            <pre><code>view()-&gt;creator('profile', 'App\Http\ViewCreators\ProfileCreator');
</code></pre>

        </article>
    </div>


    <footer class="main">
        <ul>
            <li class="nav-docs"><a href="http://www.golaravel.com/laravel/docs/">中文文档</a>
            </li>
            <li class="nav-community"><a href="http://wenda.golaravel.com" target="_blank">问答社区</a>
            </li>
            <li class="nav-api"><a href="http://laravel.com/api/5.0/" target="_blank">API</a>
            </li>
            <li class="nav-laracasts"><a href="https://laracasts.com" target="_blank">视频教程（国外）</a>
            </li>
            <li class="nav-forge"><a href="https://forge.laravel.com" target="_blank">Forge</a>
            </li>

        </ul>
        <p>Laravel is a trademark of Taylor Otwell. Copyright &copy; Taylor Otwell.</p>
        <p class="less-significant"><a href="http://jackmcdade.com" target="_blank">Design by Jack McDade</a>
        </p>
    </footer>

    <script src="../../assets/js/laravel.js"></script>
    <script src="../../assets/js/viewport-units-buggyfill.js"></script>
    <script>
        window.viewportUnitsBuggyfill.init();
    </script>
    <script type="text/javascript">
        var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
        document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3Fc8d13872a523d9c286aa7affbe0921f1' type='text/javascript'%3E%3C/script%3E"));
    </script>
</body>

</html>