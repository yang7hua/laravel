<!doctype html>
<html lang="zh-CN">

<head>
    <meta charset="utf-8">
    <title>HTTP Requests - Laravel 5.1 中文文档 | Laravel 中文网</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="author" content="Laravel 中文网">
    <meta name="description" content="Laravel - 为 WEB 艺术家创造的 PHP 框架。| Laravel 中文网">
    <meta name="keywords" content="Laravel中文社区,php框架,laravel中文网,php framework,restful routing,laravel,laravel php">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--[if lte IE 9]>
		<script src="http://cdn.bootcss.com/html5shiv/3.7.2/html5shiv.min.js"></script>
	<![endif]-->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="../../assets/css/laravel.css">
    <link rel="stylesheet" href="../../assets/css/patch.css">
</head>

<body class="docs language-php">

    <span class="overlay"></span>

    <nav class="main">
        <div class="container">
            <a href="http://www.golaravel.com/laravel/" class="brand">
                <img src="../../assets/img/laravel-logo.png" height="30"> Laravel
            </a>

            <div class="responsive-sidebar-nav">
                <a href="requests#" class="toggle-slide menu-link btn">&#9776;</a>
            </div>

            <div class="switcher">
                <div class="dropdown">
                    <button class="btn dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true">
                        <!--<span class="faint">v</span> -->
                        5.1
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="index.html">5.1</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/5.0">5.0</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/4.2">4.2</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/4.1">4.1</a>
                        </li>
                        <li role="presentation">
                            <a role="menuitem" tabindex="-1" href="http://www.golaravel.com/laravel/docs/4.0">4.0</a>
                        </li>
                    </ul>
                </div>
            </div>

            <ul class="main-nav">
                <li class="nav-docs"><a href="http://www.golaravel.com/laravel/docs/">中文文档</a>
                </li>
                <li class="nav-community"><a href="http://wenda.golaravel.com" target="_blank">问答社区</a>
                </li>
                <li class="nav-api"><a href="http://laravel.com/api/5.0/" target="_blank">API</a>
                </li>
                <li class="nav-laracasts"><a href="https://laracasts.com" target="_blank">视频教程（国外）</a>
                </li>
                <li class="nav-forge"><a href="https://forge.laravel.com" target="_blank">Forge</a>
                </li>

            </ul>
        </div>
    </nav>

    <nav id="slide-menu" class="slide-menu" role="navigation">

        <div class="brand">
            <a href="http://www.golaravel.com/laravel/">
                <img src="../../assets/img/laravel-logo-white.png" height="50">
            </a>
        </div>

        <ul class="slide-main-nav">
            <li><a href="http://www.golaravel.com/laravel/">首页</a>
            </li>
            <li class="nav-docs"><a href="http://www.golaravel.com/laravel/docs/">中文文档</a>
            </li>
            <li class="nav-community"><a href="http://wenda.golaravel.com" target="_blank">问答社区</a>
            </li>
            <li class="nav-api"><a href="http://laravel.com/api/5.0/" target="_blank">API</a>
            </li>
            <li class="nav-laracasts"><a href="https://laracasts.com" target="_blank">视频教程（国外）</a>
            </li>
            <li class="nav-forge"><a href="https://forge.laravel.com" target="_blank">Forge</a>
            </li>

        </ul>

        <div class="slide-docs-nav">
            <h2>文档目录</h2>
            <ul>
                <li>序言
                    <ul>
                        <li><a href="releases">版本说明</a>
                        </li>
                        <li><a href="upgrade">升级指南</a>
                        </li>
                        <li><a href="contributions">贡献指南</a>
                        </li>
                        <li><a href="http://www.golaravel.com/laravel/api/5.1">API 文档</a>
                        </li>
                    </ul>
                </li>
                <li>安装设置
                    <ul>
                        <li><a href="installation">安装</a>
                        </li>
                        <li><a href="homestead">Homestead</a>
                        </li>
                    </ul>
                </li>
                <li>教程
                    <ul>
                        <li><a href="quickstart">入门学习任务</a>
                        </li>
                        <li><a href="quickstart-intermediate">中级学习任务</a>
                        </li>
                    </ul>
                </li>
                <li>基础知识
                    <ul>
                        <li><a href="routing">路由</a>
                        </li>
                        <li><a href="middleware">中间件</a>
                        </li>
                        <li><a href="controllers">控制器</a>
                        </li>
                        <li><a href="requests">请求</a>
                        </li>
                        <li><a href="responses">响应</a>
                        </li>
                        <li><a href="views">视图</a>
                        </li>
                        <li><a href="blade">Blade 模板</a>
                        </li>
                    </ul>
                </li>
                <li>系统架构
                    <ul>
                        <li><a href="lifecycle">请求的生命周期</a>
                        </li>
                        <li><a href="structure">应用程序结构</a>
                        </li>
                        <li><a href="providers">服务提供者</a>
                        </li>
                        <li><a href="container">服务容器</a>
                        </li>
                        <li><a href="contracts">Contract</a>
                        </li>
                        <li><a href="facades">Facade</a>
                        </li>
                    </ul>
                </li>
                <li>系统服务
                    <ul>
                        <li><a href="authentication">认证</a>
                        </li>
                        <li><a href="authorization">授权</a>
                        </li>
                        <li><a href="artisan">Artisan 控制台</a>
                        </li>
                        <li><a href="billing">计费</a>
                        </li>
                        <li><a href="cache">缓存</a>
                        </li>
                        <li><a href="collections">集合</a>
                        </li>
                        <li><a href="elixir">Elixir</a>
                        </li>
                        <li><a href="encryption">加密</a>
                        </li>
                        <li><a href="errors">错误与日志</a>
                        </li>
                        <li><a href="events">事件</a>
                        </li>
                        <li><a href="filesystem">文件系统 / 云存储</a>
                        </li>
                        <li><a href="hashing">哈希</a>
                        </li>
                        <li><a href="helpers">辅助方法</a>
                        </li>
                        <li><a href="localization">本地化</a>
                        </li>
                        <li><a href="mail">邮件</a>
                        </li>
                        <li><a href="packages">扩展包开发</a>
                        </li>
                        <li><a href="pagination">分页</a>
                        </li>
                        <li><a href="queues">队列</a>
                        </li>
                        <li><a href="redis">Redis</a>
                        </li>
                        <li><a href="session">会话</a>
                        </li>
                        <li><a href="envoy">SSH 任务</a>
                        </li>
                        <li><a href="scheduling">任务调度</a>
                        </li>
                        <li><a href="testing">测试</a>
                        </li>
                        <li><a href="validation">验证</a>
                        </li>
                    </ul>
                </li>
                <li>数据库
                    <ul>
                        <li><a href="database">入门</a>
                        </li>
                        <li><a href="queries">查询构造器</a>
                        </li>
                        <li><a href="migrations">迁移</a>
                        </li>
                        <li><a href="seeding">数据填充</a>
                        </li>
                    </ul>
                </li>
                <li>Eloquent ORM
                    <ul>
                        <li><a href="eloquent">入门</a>
                        </li>
                        <li><a href="eloquent-relationships">关系</a>
                        </li>
                        <li><a href="eloquent-collections">集合</a>
                        </li>
                        <li><a href="eloquent-mutators">调整修改</a>
                        </li>
                        <li><a href="eloquent-serialization">序列化</a>
                        </li>
                    </ul>
                </li>
            </ul>

        </div>

    </nav>

    <div class="docs-wrapper container">

        <section class="sidebar">
            <ul>
                <li>序言
                    <ul>
                        <li><a href="releases">版本说明</a>
                        </li>
                        <li><a href="upgrade">升级指南</a>
                        </li>
                        <li><a href="contributions">贡献指南</a>
                        </li>
                        <li><a href="http://www.golaravel.com/laravel/api/5.1">API 文档</a>
                        </li>
                    </ul>
                </li>
                <li>安装设置
                    <ul>
                        <li><a href="installation">安装</a>
                        </li>
                        <li><a href="homestead">Homestead</a>
                        </li>
                    </ul>
                </li>
                <li>教程
                    <ul>
                        <li><a href="quickstart">入门学习任务</a>
                        </li>
                        <li><a href="quickstart-intermediate">中级学习任务</a>
                        </li>
                    </ul>
                </li>
                <li>基础知识
                    <ul>
                        <li><a href="routing">路由</a>
                        </li>
                        <li><a href="middleware">中间件</a>
                        </li>
                        <li><a href="controllers">控制器</a>
                        </li>
                        <li><a href="requests">请求</a>
                        </li>
                        <li><a href="responses">响应</a>
                        </li>
                        <li><a href="views">视图</a>
                        </li>
                        <li><a href="blade">Blade 模板</a>
                        </li>
                    </ul>
                </li>
                <li>系统架构
                    <ul>
                        <li><a href="lifecycle">请求的生命周期</a>
                        </li>
                        <li><a href="structure">应用程序结构</a>
                        </li>
                        <li><a href="providers">服务提供者</a>
                        </li>
                        <li><a href="container">服务容器</a>
                        </li>
                        <li><a href="contracts">Contract</a>
                        </li>
                        <li><a href="facades">Facade</a>
                        </li>
                    </ul>
                </li>
                <li>系统服务
                    <ul>
                        <li><a href="authentication">认证</a>
                        </li>
                        <li><a href="authorization">授权</a>
                        </li>
                        <li><a href="artisan">Artisan 控制台</a>
                        </li>
                        <li><a href="billing">计费</a>
                        </li>
                        <li><a href="cache">缓存</a>
                        </li>
                        <li><a href="collections">集合</a>
                        </li>
                        <li><a href="elixir">Elixir</a>
                        </li>
                        <li><a href="encryption">加密</a>
                        </li>
                        <li><a href="errors">错误与日志</a>
                        </li>
                        <li><a href="events">事件</a>
                        </li>
                        <li><a href="filesystem">文件系统 / 云存储</a>
                        </li>
                        <li><a href="hashing">哈希</a>
                        </li>
                        <li><a href="helpers">辅助方法</a>
                        </li>
                        <li><a href="localization">本地化</a>
                        </li>
                        <li><a href="mail">邮件</a>
                        </li>
                        <li><a href="packages">扩展包开发</a>
                        </li>
                        <li><a href="pagination">分页</a>
                        </li>
                        <li><a href="queues">队列</a>
                        </li>
                        <li><a href="redis">Redis</a>
                        </li>
                        <li><a href="session">会话</a>
                        </li>
                        <li><a href="envoy">SSH 任务</a>
                        </li>
                        <li><a href="scheduling">任务调度</a>
                        </li>
                        <li><a href="testing">测试</a>
                        </li>
                        <li><a href="validation">验证</a>
                        </li>
                    </ul>
                </li>
                <li>数据库
                    <ul>
                        <li><a href="database">入门</a>
                        </li>
                        <li><a href="queries">查询构造器</a>
                        </li>
                        <li><a href="migrations">迁移</a>
                        </li>
                        <li><a href="seeding">数据填充</a>
                        </li>
                    </ul>
                </li>
                <li>Eloquent ORM
                    <ul>
                        <li><a href="eloquent">入门</a>
                        </li>
                        <li><a href="eloquent-relationships">关系</a>
                        </li>
                        <li><a href="eloquent-collections">集合</a>
                        </li>
                        <li><a href="eloquent-mutators">调整修改</a>
                        </li>
                        <li><a href="eloquent-serialization">序列化</a>
                        </li>
                    </ul>
                </li>
            </ul>

        </section>

        <article>
            <h1>HTTP Requests</h1>
            <ul>
                <li><a href="requests#accessing-the-request">Accessing The Request</a>
                    <ul>
                        <li><a href="requests#basic-request-information">Basic Request Information</a>
                        </li>
                        <li><a href="requests#psr7-requests">PSR-7 Requests</a>
                        </li>
                    </ul>
                </li>
                <li><a href="requests#retrieving-input">Retrieving Input</a>
                    <ul>
                        <li><a href="requests#old-input">Old Input</a>
                        </li>
                        <li><a href="requests#cookies">Cookies</a>
                        </li>
                        <li><a href="requests#files">Files</a>
                        </li>
                    </ul>
                </li>
            </ul>
            <p>
                <a name="accessing-the-request"></a>
            </p>
            <h2>Accessing The Request</h2>
            <p>To obtain an instance of the current HTTP request via dependency injection, you should type-hint the <code>Illuminate\Http\Request</code> class on your controller constructor or method. The current request instance will automatically be injected
                by the <a href="container">service container</a>:</p>
            <pre><code>&lt;?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Routing\Controller;

class UserController extends Controller
{
    /**
     * Store a new user.
     *
     * @param  Request  $request
     * @return Response
     */
    public function store(Request $request)
    {
        $name = $request-&gt;input('name');

        //
    }
}
</code></pre>
            <p>If your controller method is also expecting input from a route parameter, simply list your route arguments after your other dependencies. For example, if your route is defined like so:</p>
            <pre><code>Route::put('user/{id}', 'UserController@update');
</code></pre>
            <p>You may still type-hint the <code>Illuminate\Http\Request</code> and access your route parameter <code>id</code> by defining your controller method like the following:</p>
            <pre><code>&lt;?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Routing\Controller;

class UserController extends Controller
{
    /**
     * Update the specified user.
     *
     * @param  Request  $request
     * @param  int  $id
     * @return Response
     */
    public function update(Request $request, $id)
    {
        //
    }
}
</code></pre>
            <p>
                <a name="basic-request-information"></a>
            </p>
            <h3>Basic Request Information</h3>
            <p>The <code>Illuminate\Http\Request</code> instance provides a variety of methods for examining the HTTP request for your application. The Laravel <code>Illuminate\Http\Request</code> extends the <code>Symfony\Component\HttpFoundation\Request</code>                class. Here are a few more of the useful methods available on this class:</p>
            <h4>Retrieving The Request URI</h4>
            <p>The <code>path</code> method returns the request's URI. So, if the incoming request is targeted at <code>http://domain.com/foo/bar</code>, the <code>path</code> method will return <code>foo/bar</code>:</p>
            <pre><code>$uri = $request-&gt;path();
</code></pre>
            <p>The <code>is</code> method allows you to verify that the incoming request URI matches a given pattern. You may use the <code>*</code> character as a wildcard when utilizing this method:</p>
            <pre><code>if ($request-&gt;is('admin/*')) {
    //
}
</code></pre>
            <p>To get the full URL, not just the path info, you may use the <code>url</code> method on the request instance:</p>
            <pre><code>$url = $request-&gt;url();
</code></pre>
            <h4>Retrieving The Request Method</h4>
            <p>The <code>method</code> method will return the HTTP verb for the request. You may also use the <code>isMethod</code> method to verify that the HTTP verb matches a given string:</p>
            <pre><code>$method = $request-&gt;method();

if ($request-&gt;isMethod('post')) {
    //
}
</code></pre>
            <p>
                <a name="psr7-requests"></a>
            </p>
            <h3>PSR-7 Requests</h3>
            <p>The PSR-7 standard specifies interfaces for HTTP messages, including requests and responses. If you would like to obtain an instance of a PSR-7 request, you will first need to install a few libraries. Laravel uses the Symfony HTTP Message
                Bridge component to convert typical Laravel requests and responses into PSR-7 compatible implementations:</p>
            <pre><code>composer require symfony/psr-http-message-bridge

composer require zendframework/zend-diactoros
</code></pre>
            <p>Once you have installed these libraries, you may obtain a PSR-7 request by simply type-hinting the request type on your route or controller:</p>
            <pre><code>use Psr\Http\Message\ServerRequestInterface;

Route::get('/', function (ServerRequestInterface $request) {
    //
});
</code></pre>
            <p>If you return a PSR-7 response instance from a route or controller, it will automatically be converted back to a Laravel response instance and be displayed by the framework.</p>
            <p>
                <a name="retrieving-input"></a>
            </p>
            <h2>Retrieving Input</h2>
            <h4>Retrieving An Input Value</h4>
            <p>Using a few simple methods, you may access all user input from your <code>Illuminate\Http\Request</code> instance. You do not need to worry about the HTTP verb used for the request, as input is accessed in the same way for all verbs:</p>
            <pre><code>$name = $request-&gt;input('name');
</code></pre>
            <p>Alternatively, you may access user input using the properties of the <code>Illuminate\Http\Request</code> instance. For example, if one of your application's forms contains a <code>name</code> field, you may access the value of the posted
                field like so:</p>
            <pre><code>$name = $request-&gt;name;
</code></pre>
            <p>You may pass a default value as the second argument to the <code>input</code> method. This value will be returned if the requested input value is not present on the request:</p>
            <pre><code>$name = $request-&gt;input('name', 'Sally');
</code></pre>
            <p>When working on forms with array inputs, you may use &quot;dot&quot; notation to access the arrays:</p>
            <pre><code>$input = $request-&gt;input('products.0.name');
</code></pre>
            <h4>Determining If An Input Value Is Present</h4>
            <p>To determine if a value is present on the request, you may use the <code>has</code> method. The <code>has</code> method returns <code>true</code> if the value is present <strong>and</strong> is not an empty string:</p>
            <pre><code>if ($request-&gt;has('name')) {
    //
}
</code></pre>
            <h4>Retrieving All Input Data</h4>
            <p>You may also retrieve all of the input data as an <code>array</code> using the <code>all</code> method:</p>
            <pre><code>$input = $request-&gt;all();
</code></pre>
            <h4>Retrieving A Portion Of The Input Data</h4>
            <p>If you need to retrieve a sub-set of the input data, you may use the <code>only</code> and <code>except</code> methods. Both of these methods will accept a single <code>array</code> or a dynamic list of arguments:</p>
            <pre><code>$input = $request-&gt;only(['username', 'password']);

$input = $request-&gt;only('username', 'password');

$input = $request-&gt;except(['credit_card']);

$input = $request-&gt;except('credit_card');
</code></pre>
            <p>
                <a name="old-input"></a>
            </p>
            <h3>Old Input</h3>
            <p>Laravel allows you to keep input from one request during the next request. This feature is particularly useful for re-populating forms after detecting validation errors. However, if you are using Laravel's included <a href="validation">validation services</a>,
                it is unlikely you will need to manually use these methods, as some of Laravel's built-in validation facilities will call them automatically.</p>
            <h4>Flashing Input To The Session</h4>
            <p>The <code>flash</code> method on the <code>Illuminate\Http\Request</code> instance will flash the current input to the <a href="session">session</a> so that it is available during the user's next request to the application:</p>
            <pre><code>$request-&gt;flash();
</code></pre>
            <p>You may also use the <code>flashOnly</code> and <code>flashExcept</code> methods to flash a sub-set of the request data into the session:</p>
            <pre><code>$request-&gt;flashOnly('username', 'email');

$request-&gt;flashExcept('password');
</code></pre>
            <h4>Flash Input Into Session Then Redirect</h4>
            <p>Since you often will want to flash input in association with a redirect to the previous page, you may easily chain input flashing onto a redirect using the <code>withInput</code> method:</p>
            <pre><code>return redirect('form')-&gt;withInput();

return redirect('form')-&gt;withInput($request-&gt;except('password'));
</code></pre>
            <h4>Retrieving Old Data</h4>
            <p>To retrieve flashed input from the previous request, use the <code>old</code> method on the <code>Request</code> instance. The <code>old</code> method provides a convenient helper for pulling the flashed input data out of the <a href="session">session</a>:</p>
            <pre><code>$username = $request-&gt;old('username');
</code></pre>
            <p>Laravel also provides a global <code>old</code> helper function. If you are displaying old input within a <a href="blade">Blade template</a>, it is more convenient to use the <code>old</code> helper:</p>
            <pre><code>{{ old('username') }}
</code></pre>
            <p>
                <a name="cookies"></a>
            </p>
            <h3>Cookies</h3>
            <h4>Retrieving Cookies From The Request</h4>
            <p>All cookies created by the Laravel framework are encrypted and signed with an authentication code, meaning they will be considered invalid if they have been changed by the client. To retrieve a cookie value from the request, you may use the
                <code>cookie</code> method on the <code>Illuminate\Http\Request</code> instance:</p>
            <pre><code>$value = $request-&gt;cookie('name');
</code></pre>
            <h4>Attaching A New Cookie To A Response</h4>
            <p>Laravel provides a global <code>cookie</code> helper function which serves as a simple factory for generating new <code>Symfony\Component\HttpFoundation\Cookie</code> instances. The cookies may be attached to a <code>Illuminate\Http\Response</code>                instance using the <code>withCookie</code> method:</p>
            <pre><code>$response = new Illuminate\Http\Response('Hello World');

$response-&gt;withCookie(cookie('name', 'value', $minutes));

return $response;
</code></pre>
            <p>To create a long-lived cookie, which lasts for five years, you may use the <code>forever</code> method on the cookie factory by first calling the <code>cookie</code> helper with no arguments, and then chaining the <code>forever</code> method
                onto the returned cookie factory:</p>
            <pre><code>$response-&gt;withCookie(cookie()-&gt;forever('name', 'value'));
</code></pre>
            <p>
                <a name="files"></a>
            </p>
            <h3>Files</h3>
            <h4>Retrieving Uploaded Files</h4>
            <p>You may access uploaded files that are included with the <code>Illuminate\Http\Request</code> instance using the <code>file</code> method. The object returned by the <code>file</code> method is an instance of the <code>Symfony\Component\HttpFoundation\File\UploadedFile</code>                class, which extends the PHP <code>SplFileInfo</code> class and provides a variety of methods for interacting with the file:</p>
            <pre><code>$file = $request-&gt;file('photo');
</code></pre>
            <h4>Verifying File Presence</h4>
            <p>You may also determine if a file is present on the request using the <code>hasFile</code> method:</p>
            <pre><code>if ($request-&gt;hasFile('photo')) {
    //
}
</code></pre>
            <h4>Validating Successful Uploads</h4>
            <p>In addition to checking if the file is present, you may verify that there were no problems uploading the file via the <code>isValid</code> method:</p>
            <pre><code>if ($request-&gt;file('photo')-&gt;isValid()) {
    //
}
</code></pre>
            <h4>Moving Uploaded Files</h4>
            <p>To move the uploaded file to a new location, you should use the <code>move</code> method. This method will move the file from its temporary upload location (as determined by your PHP configuration) to a more permanent destination of your choosing:</p>
            <pre><code>$request-&gt;file('photo')-&gt;move($destinationPath);

$request-&gt;file('photo')-&gt;move($destinationPath, $fileName);
</code></pre>
            <h4>Other File Methods</h4>
            <p>There are a variety of other methods available on <code>UploadedFile</code> instances. Check out the <a href="http://api.symfony.com/2.7/Symfony/Component/HttpFoundation/File/UploadedFile.html" target="_blank">API documentation for the class</a> for more
                information regarding these methods.</p>

        </article>
    </div>


    <footer class="main">
        <ul>
            <li class="nav-docs"><a href="http://www.golaravel.com/laravel/docs/">中文文档</a>
            </li>
            <li class="nav-community"><a href="http://wenda.golaravel.com" target="_blank">问答社区</a>
            </li>
            <li class="nav-api"><a href="http://laravel.com/api/5.0/" target="_blank">API</a>
            </li>
            <li class="nav-laracasts"><a href="https://laracasts.com" target="_blank">视频教程（国外）</a>
            </li>
            <li class="nav-forge"><a href="https://forge.laravel.com" target="_blank">Forge</a>
            </li>

        </ul>
        <p>Laravel is a trademark of Taylor Otwell. Copyright &copy; Taylor Otwell.</p>
        <p class="less-significant"><a href="http://jackmcdade.com" target="_blank">Design by Jack McDade</a>
        </p>
    </footer>

    <script src="../../assets/js/laravel.js"></script>
    <script src="../../assets/js/viewport-units-buggyfill.js"></script>
    <script>
        window.viewportUnitsBuggyfill.init();
    </script>
    <script type="text/javascript">
        var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
        document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3Fc8d13872a523d9c286aa7affbe0921f1' type='text/javascript'%3E%3C/script%3E"));
    </script>
</body>

</html>